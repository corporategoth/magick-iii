# Magick IRC Services
#
# (c) 2005 The Neuromancy Society <info@neuromancy.net>
#
# The above copywright may not be removed under any circumstances,
# however it may be added to if any modifications are made to this
# file.  All modified code must be clearly documented and labelled.
#
# This code is released under the GNU General Public License v2.0 or better.
# The full text of this license should be contained in a file called
# COPYING distributed with this code.  If this file does not exist,
# it may be viewed here: http://www.neuromancy.net/license/gpl.html
#
# =======================================================================
# $Id$
# =======================================================================
#
# For official changes (by The Neuromancy Society), please
# check the ChangeLog* files that come with this distribution.
#
# Third Party Changes (please include e-mail address):
#
# N/A
#
# =======================================================================

# Logging configuration file.
#
# Please be aware of the following syntactical rules in this file.
#
# This file is divided into sections.  A key/value pair in one section has
# no baring on the same key/value pair in another section.  Subsections
# are delimited by the '.' character.  For the most part, subsections are
# not needed if the 'parent' section is not needed.  Unlike a traditional
# INI file, some keys in this file are permitted to appear multiple times
# in the same section.
#
# Each comment before a field in this file is prefixed by a code indicatng
# whether the field is required or not.  A code of '[REQ]' indicates that
# the field is required if the section it is in is required.  A code of
# '[OPT]' indicates the field may be omitted if you just wish the default
# to be taken.  Any optional value will also include a '[DEF]' code that
# will indicate the default value if the field is omitted.
#
# When specifying a value that is to be interpereted as a duration, you
# may either spell out the full words (minutes, seconds, etc) or you may
# use the following abbreviations to represent the equivalent units:
#   y = years    m = months     w = weeks      d = day
#   h = hours    n = minutes    s = seconds
# The seconds value may also be specified as a fractional number.  Also,
# you may specify a higher value than the 'natural' boundary of any unit,
# for example its perfectly valid to say 120 seconds to mean 2 minutes.
# A unit of seconds is assumed if no time unit is specified.
#
# Similarly, when specifying values indicating a size (such as kilobytes),
# you may use the following abbreviations to represent the equivalent units:
#   e = exabytes     p = petabytes    t = terabytes    g = gigabytes
#   m = megabytes    k = kilobytes    b = bytes
# As with duration values, going above the 'natural' buondaries of any unit
# is allowed (ie. 2048 bytes to mean 2 kb).  Additionally, you may suffix any
# unit abbreviation (except bytes) with 'b' without altering its meaning, so
# 5kb is equivalent to just 5k.  A unit of bytes is assumed if no size unit is
# specified.
# 
# Use of the '#' character will make any line a comment from that point on,
# and as such the '#' character may not be used in any field.  To represent
# a channel, the '&' channel may be used to replace the '#' character.  We
# only support channels prefixed with a '&' (representing a '#') or a '+'.
#
# Any field requiring a path (either a directory OR file) may have that path
# specified in either absolute or relative terms.  If a relative path is 
# given, it will be relative to the working working directory of Magick,
# unless otherwise specified.  The working directory of Magick will always
# be the current directory where Magick was started from unless the --dir
# (-D) command line option is used.

# +--------------+
# | Main Section |
# +--------------+
#
# Also known as the 'null' section, since there is no explicit section
# name.  Many fields in this section also have command-line parameters.

# [OPT] Logging mechanism to use.  More than one may be specified.
# Available mechanisms are:
#   - simple
#     Output is sent to a file.  No cycling or compression occurs.
#   - file
#     Output is sent to a file.  Log file cycling and compression are
#     taken care of for you.
#   - syslog (unix only)
#     Output is sent to the system logger.
#   - eventlog (windows only)
#     Output is sent to the NT Event Log.
#   - net
#     A socket connection is established, and all output is sent to it.
# [DEF] (none)
log = simple

# [OPT] The level at which logging will occur.  Each more verbose log level
# will automatically log messages reported on less verbose levels.
# Available log levels are:
#   - Fatal
#   - Critical
#   - Error
#   - Warning
#   - Notice
#   - Info
#   - Debug
#   - Debug+1 ... Debug+5
# [DEF] Info
log-level = debug+5

# [OPT] Channel to send all log messages to.  This will still work even if
# you do not specify any other method of logging output.
#
# Please read the note at the beginning of this file regarding options that
# require a channel name to be specified.
# [DEF] (none)
log-channel = &snoop

# +------------------------+
# | Simple Logging Section |
# +------------------------+
#
# The simple logging mechanism is used when one of the log entries in the
# main section is 'simple'.  This mechanism will simply output log entries
# to a file.  No special considerations are made for this file, and it is
# up to the services maintainer to ensure it does not get too big, etc.
[log.simple]

# [REQ] The name of the file to log to.  This will be created if it does not
# exist, or appended to if it does.  You may use the special values STDOUT
# and STDERR to output to the standard output and standard error destinations
# respectively.
name = magick.log

# [OPT] Should the date stamps in the log file be in Universal Coordinated
# Time.  If this is false, the local time on the system will be used.
# [DEF] false
utc = false

# [OPT] How should each entry in the log file be formatted.  Everything is
# taken literally except:
#   <DATE:x>   The timestamp of the log entry, where x describes the date
#              format (see the separate date date formatting documentation
#              supplied with Magick).
#   <LEVEL:x>  The priority of the log message (eg. Error, Critical, etc).
#              The format should be [number]d or [number]s.  The number
#              is optional and specifies the minimum width of the field.
#              If the 'd' suffix is used we will output the numerical
#              priority, if 's' is used, we will output the textual
#              priority name (see below).  If the number is positive,
#              the field will be right-aligned, negative and it will be
#              left aligned.  When outputting the numerical priority, you
#              may prefix the number with a 0 (eg. -02) to pad the left
#              hand side of the number with 0s.
#   <MESSAGE>  The actual log message to be written.
format = <DATE:C> <LEVEL:-10s> <MESSAGE>

# [OPT] When outputting hex dumps (often used to display a block of binary
# data) should we display the offset in decimal or hex.  If this is false,
# we will display the offset as a hex number.
# [DEF] false
hex-decimal = false

# [OPT] How many characters do we wish to have represented on a single line
# when outputting a hex dump.
# [DEF] 16
hex-width = 16

# +------------------------------------+
# | Simple Logging Level Names Section |
# +------------------------------------+
[log.simple.levels]

# [OPT] The textual priority for a fatal message.
# Fatal messages cause Magick to terminate, so if you see a fatal message
# in your log file, you can be sure the application terminated.
# [DEF] FATAL
fatal = FATAL

# [OPT] The textual priority for a critical message.
# Critical messages usually indicate some kind of condition where Magick
# can keep running, but it is probably in some kind of permanently degraded
# state or something very important has failed.
# [DEF] CRITICAL
critical = CRITICAL

# [OPT] The textual priority for a error message.
# Errors indicate a situation where Magick had to stop what it was doing
# because of an unusual circumstance.  Its not the end of the world, but
# technically it should not occur.
# [DEF] ERROR
error = ERROR

# [OPT] The textual priority for a warning message.
# Warnings indicate a pseudo-normal cirumstance that is undesirable.
# [DEF] WARNING
warning = WARNING

# [OPT] The textual priority for a notice message.
# Notices are normal things that occur, but are notable in that it is either
# at a major point in the code, or important that it took place.
# [DEF] NOTICE
notice = NOTICE

# [OPT] The textual priority for a info message.
# Info messages are just that, informational.  They're not particularly
# important, but useful to have to get a better idea of what is currently
# happening inside/to Magick.
# [DEF] INFO
info = INFO

# [OPT] The textual priority for a debug message.
# Debug messages appear with every message 'above' info.  Usually they are
# either more detailed information about a different message, or information
# used for tracking down problems and such.
# [DEF] DEBUG
debug = DEBUG

# +----------------------+
# | File Logging Section |
# +----------------------+
[log.file]

# [REQ] The name of the file to log to.  This will be created if it does not
# exist, or appended to if it does.
name = magick.log

# [OPT] How many 'old' logs will we keep around.  Logs are cycled after the
# current log reacher a certain size.  So the oldest log is deleted, the
# second oldest renamed to the oldest, and so on until the current log is
# renamed as the 'first old log' (usually name.0).  If this is set to 0,
# no log cycling will occur, and when we go over the size limit for the
# log file, we will truncate it.
# [DEF] 0
backup = 7

# [OPT] The file size, in bytes, at which we will cycle the log file.  If this
# is 0, we will not cycle log files based on their size.
# [DEF] 0
max-size = 500000000

# [OPT] A command we will execute (with a file name appended to it) that will
# properly 'archive' an old log file when it is cycled the fist time.  This
# command is often used to do such things as compress the file, or copy it
# to some kind of backup area, etc.
# [DEF] (none)
archive-cmd = gzip -9

# [OPT] The file extension an old log will have after the archive command
# has been run.  This is meaningless if no archive command is defined.
# [DEF] (none)
archive-ext = gz

# [OPT] Should the date stamps in the log file be in Universal Coordinated
# Time.  If this is false, the local time on the system will be used.
# [DEF] false
utc = false

# [OPT] How should each entry in the log file be formatted.  Everything is
# taken literally except:
#   <DATE:x>   The timestamp of the log entry, where x describes the date
#              format (see the separate date date formatting documentation
#              supplied with Magick).
#   <LEVEL:x>  The priority of the log message (eg. Error, Critical, etc).
#              The format should be [number]d or [number]s.  The number
#              is optional and specifies the minimum width of the field.
#              If the 'd' suffix is used we will output the numerical
#              priority, if 's' is used, we will output the textual
#              priority name (see below).  If the number is positive,
#              the field will be right-aligned, negative and it will be
#              left aligned.  When outputting the numerical priority, you
#              may prefix the number with a 0 (eg. -02) to pad the left
#              hand side of the number with 0s.
#   <MESSAGE>  The actual log message to be written.
format = <DATE:C> <LEVEL:-10s> <MESSAGE>

# [OPT] When outputting hex dumps (often used to display a block of binary
# data) should we display the offset in decimal or hex.  If this is false,
# we will display the offset as a hex number.
# [DEF] false
hex-decimal = false

# [OPT] How many characters do we wish to have represented on a single line
# when outputting a hex dump.
# [DEF] 16
hex-width = 16

# +----------------------------------+
# | File Logging Level Names Section |
# +----------------------------------+
[log.file.levels]

# [OPT] The textual priority for a fatal message.
# Fatal messages cause Magick to terminate, so if you see a fatal message
# in your log file, you can be sure the application terminated.
# [DEF] FATAL
fatal = FATAL

# [OPT] The textual priority for a critical message.
# Critical messages usually indicate some kind of condition where Magick
# can keep running, but it is probably in some kind of permanently degraded
# state or something very important has failed.
# [DEF] CRITICAL
critical = CRITICAL

# [OPT] The textual priority for a error message.
# Errors indicate a situation where Magick had to stop what it was doing
# because of an unusual circumstance.  Its not the end of the world, but
# technically it should not occur.
# [DEF] ERROR
error = ERROR

# [OPT] The textual priority for a warning message.
# Warnings indicate a pseudo-normal cirumstance that is undesirable.
# [DEF] WARNING
warning = WARNING

# [OPT] The textual priority for a notice message.
# Notices are normal things that occur, but are notable in that it is either
# at a major point in the code, or important that it took place.
# [DEF] NOTICE
notice = NOTICE

# [OPT] The textual priority for a info message.
# Info messages are just that, informational.  They're not particularly
# important, but useful to have to get a better idea of what is currently
# happening inside/to Magick.
# [DEF] INFO
info = INFO

# [OPT] The textual priority for a debug message.
# Debug messages appear with every message 'above' info.  Usually they are
# either more detailed information about a different message, or information
# used for tracking down problems and such.
# [DEF] DEBUG
debug = DEBUG

# +------------------------+
# | System Logging Section |
# +------------------------+
#
# This is available only for systems systems that have some kind of syslog,
# which is usually UNIX or UNIX-like systems.
[log.syslog]

# [REQ] The logging facility all our log messages will be logged under.
# Please note this has NO effect on the log message priority.  The available
# options are:
#   - Kernel
#   - User
#   - Mail
#   - Daemon
#   - Auth
#   - Syslog
#   - Lpr
#   - News
#   - UUCP
#   - Cron
#   - AuthPriv (may or may not be available)
#   - Ftp (may or may not be available)
#   - Local0 ... Local7
facility = Local0

# +-------------------------+
# | Network Logging Section |
# +-------------------------+
[log.net]

# [REQ] The host (which must resolve) or IP address of where we will send all
# log messages.  We will not send any 'header' information, just the messages.
host = 127.0.0.1

# [REQ] The port we will connect to on the above host.
port = 1234

# [OPT] Should the date stamps in the log file be in Universal Coordinated
# Time.  If this is false, the local time on the system will be used.
# [DEF] false
utc = false

# [OPT] How should each entry in the log file be formatted.  Everything is
# taken literally except:
#   <DATE:x>   The timestamp of the log entry, where x describes the date
#              format (see the separate date date formatting documentation
#              supplied with Magick).
#   <LEVEL:x>  The priority of the log message (eg. Error, Critical, etc).
#              The format should be [number]d or [number]s.  The number
#              is optional and specifies the minimum width of the field.
#              If the 'd' suffix is used we will output the numerical
#              priority, if 's' is used, we will output the textual
#              priority name (see below).  If the number is positive,
#              the field will be right-aligned, negative and it will be
#              left aligned.  When outputting the numerical priority, you
#              may prefix the number with a 0 (eg. -02) to pad the left
#              hand side of the number with 0s.
#   <MESSAGE>  The actual log message to be written.
format = <DATE:C> <LEVEL:-10s> <MESSAGE>

# [OPT] When outputting hex dumps (often used to display a block of binary
# data) should we display the offset in decimal or hex.  If this is false,
# we will display the offset as a hex number.
# [DEF] false
hex-decimal = false

# [OPT] How many characters do we wish to have represented on a single line
# when outputting a hex dump.
# [DEF] 16
hex-width = 16

# +-------------------------------------+
# | Network Logging Level Names Section |
# +-------------------------------------+
[log.net.levels]

# [OPT] The textual priority for a fatal message.
# Fatal messages cause Magick to terminate, so if you see a fatal message
# in your log file, you can be sure the application terminated.
# [DEF] FATAL
fatal = FATAL

# [OPT] The textual priority for a critical message.
# Critical messages usually indicate some kind of condition where Magick
# can keep running, but it is probably in some kind of permanently degraded
# state or something very important has failed.
# [DEF] CRITICAL
critical = CRITICAL

# [OPT] The textual priority for a error message.
# Errors indicate a situation where Magick had to stop what it was doing
# because of an unusual circumstance.  Its not the end of the world, but
# technically it should not occur.
# [DEF] ERROR
error = ERROR

# [OPT] The textual priority for a warning message.
# Warnings indicate a pseudo-normal cirumstance that is undesirable.
# [DEF] WARNING
warning = WARNING

# [OPT] The textual priority for a notice message.
# Notices are normal things that occur, but are notable in that it is either
# at a major point in the code, or important that it took place.
# [DEF] NOTICE
notice = NOTICE

# [OPT] The textual priority for a info message.
# Info messages are just that, informational.  They're not particularly
# important, but useful to have to get a better idea of what is currently
# happening inside/to Magick.
# [DEF] INFO
info = INFO

# [OPT] The textual priority for a debug message.
# Debug messages appear with every message 'above' info.  Usually they are
# either more detailed information about a different message, or information
# used for tracking down problems and such.
# [DEF] DEBUG
debug = DEBUG

# END FILE
