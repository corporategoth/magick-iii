# Magick IRC Services
#
# (c) 2005 The Neuromancy Society <info@neuromancy.net>
#
# The above copywright may not be removed under any circumstances,
# however it may be added to if any modifications are made to this
# file.  All modified code must be clearly documented and labelled.
#
# This code is released under the GNU General Public License v2.0 or better.
# The full text of this license should be contained in a file called
# COPYING distributed with this code.  If this file does not exist,
# it may be viewed here: http://www.neuromancy.net/license/gpl.html
#
# =======================================================================
# $Id$
# =======================================================================
#
# For official changes (by The Neuromancy Society), please
# check the ChangeLog* files that come with this distribution.
#
# Third Party Changes (please include e-mail address):
#
# N/A
#
# =======================================================================

# Main configuration file.
#
# Please be aware of the following syntactical rules in this file.
#
# This file is divided into sections.  A key/value pair in one section has
# no baring on the same key/value pair in another section.  Subsections
# are delimited by the '.' character.  For the most part, subsections are
# not needed if the 'parent' section is not needed.  Unlike a traditional
# INI file, some keys in this file are permitted to appear multiple times
# in the same section.
#
# Each comment before a field in this file is prefixed by a code indicatng
# whether the field is required or not.  A code of '[REQ]' indicates that
# the field is required if the section it is in is required.  A code of
# '[OPT]' indicates the field may be omitted if you just wish the default
# to be taken.  Any optional value will also include a '[DEF]' code that
# will indicate the default value if the field is omitted.
#
# When specifying a value that is to be interpereted as a duration, you
# may either spell out the full words (minutes, seconds, etc) or you may
# use the following abbreviations to represent the equivalent units:
#   y = years    m = months     w = weeks      d = day
#   h = hours    n = minutes    s = seconds
# The seconds value may also be specified as a fractional number.  Also,
# you may specify a higher value than the 'natural' boundary of any unit,
# for example its perfectly valid to say 120 seconds to mean 2 minutes.
# A unit of seconds is assumed if no time unit is specified.
#
# Similarly, when specifying values indicating a size (such as kilobytes),
# you may use the following abbreviations to represent the equivalent units:
#   e = exabytes     p = petabytes    t = terabytes    g = gigabytes
#   m = megabytes    k = kilobytes    b = bytes
# As with duration values, going above the 'natural' buondaries of any unit
# is allowed (ie. 2048 bytes to mean 2 kb).  Additionally, you may suffix any
# unit abbreviation (except bytes) with 'b' without altering its meaning, so
# 5kb is equivalent to just 5k.  A unit of bytes is assumed if no size unit is
# specified.
# 
# Use of the '#' character will make any line a comment from that point on,
# and as such the '#' character may not be used in any field.  To represent
# a channel, the '&' channel may be used to replace the '#' character.  We
# only support channels prefixed with a '&' (representing a '#') or a '+'.
#
# Any field requiring a path (either a directory OR file) may have that path
# specified in either absolute or relative terms.  If a relative path is 
# given, it will be relative to the working working directory of Magick,
# unless otherwise specified.  The working directory of Magick will always
# be the current directory where Magick was started from unless the --dir
# (-D) command line option is used.

# +--------------+
# | Main Section |
# +--------------+
#
# Also known as the 'null' section, since there is no explicit section
# name.  Many fields in this section also have command-line parameters.

# [OPT] Directory that is the root of our language files structure.
# [DEF] lang
language-dir = lang

# [OPT] The default language to use for all log file entries, and messages
# that are not sent directly to a single user.
# [DEF] en_GB
language = en_GB

# [REQ] The server name we will advertise ourselves as when connecting to
# the network.  Although this does have to adhere to the rules of host
# names, it does not have to resolve.
server-name = services.neuromancy.net

# [OPT] The description of our 'server'.  This is only really displayed to
# the user when they execute a /WHOIS on one of the services.
# [DEF] Magick IRC Services
server-desc = Magick IRC Services

# [OPT] The IP address Magick will bind to for all socket connections.  This
# includes both connections to the IRC server, and any other connections that
# may be made (eg. DCCs).
# If you do not know what this is, then please do not specify it, and the
# appropriate interface will be chosen automatically based on the remote IP
# address of the connection.
# [DEF] (none)
bind = 127.0.0.1

# [REQ] The configuration file that contains the details of how the IRC daemon
# in use on your network behaves.
protocol = ircd/ircd.bahamut.ini

# [OPT] The file that will contain the process ID of Magick once it is running.
# [DEF] magick.pid
pidfile = magick.pid

# [OPT] The 'Message of the Day' file.  This file will be sent, verbatim, when
# someone executes a /MOTD command against the services server.
# [DEF] magick.motd
motdfile = magick.motd

# [OPT] The lowest level these services can be.  The services level is used
# to determine which set of services (assuming there is more than one set of
# Magick services on the network) are the current 'primary' services.  The
# actual services level of any set of services at any point in time is based
# on how much lag services detect to the rest of the network.  The services
# with the lowest 'actual' level will be the primary services at that point
# in time.
# [DEF] 1
level = 1

# [OPT] The maximum level these services will allow themselves to become.
# [DEF] 5
max-level = 5

# [OPT] The average lag to all servers (excluding the lowest and highest) that
# we will allow before increasing our 'actual' services level.  For example if
# the below is 15 seconds, when the average lag to all servers goes above 15s,
# after the highest and lowest times have been excluded, we will increase our
# actual level.  When it goes above 30s will will increase it again, 45 seconds
# and we will increase it a third time, and so on.  When the lag falls below
# the same threshold points, we will decrease our actual level accordingly.
# [DEF] 15 seconds
lag-time = 15s

# [OPT] How often to commit our databases to permanent storage.  Depending on
# which storage backend is in use, this value may actually do nothing, however
# if you have a storage backend that stores all data in memory and periodically
# commits that data to permanent storage, this is how often this will occur.
# [DEF] 5 minutes
save-time = 5n

# [REQ] This option stops Magick from running, pure and simple.  It is here to
# ensure that you at least look at the configuration file and alter it before
# just starting up Magick.  This must be set to 'false' for Magick to start.
stop = false

# [REQ] The servers Magick will attempt to connect to.  You may specify as
# many remote connection entries as you like, with the syntax of:
#   remote = <host> <port> <password> [numeric]
# Where <ip address> is the remote host (which MUST resolve) or ip address of
# the IRC server to connect to (which must be configured to allow us to
# connect to it as a server). <port> is a port that the IRC server is listening
# on.  <password> is the password that will be used in BOTH directions for
# the connection.  And [numeric] is an optional field that contains what OUR
# (ie. services) numeric will be when connected to this server.
#
# Server connections will be attempted in the order they are provided.
remote = 127.0.0.1 6667 MaGeeK

# [OPT] This option is used to both stop rogue admins linking in servers
# without getting permission first, and for enforcing certain rules as
# far as how servers may be linked together.  The syntax is:
#   allow = <server> [uplinks]
# Where <server> is the server (exactly as it appears in a server listing)
# that is allowed to connect to the network, and [uplinks] is a wildcarded
# mask describing who that server may connect to.  for example:
#   allow = leaf1.us.somenet.com *.us.somenet.com
# may be used to say that leaf1 may only connect to another server that ends
# in .us.somenet.com.  You may specify as many allow lines as you like, and
# even specify multiple allow lines for the same server.  If no [uplinks] are
# specified, then it is the same as putting in '*' (ie. the server may connect
# to any other server).
#
# This is an advanced feature and should not be used unless you really know
# what you are doing.  Please keep two things in mind when using allows:
#   1) If even one allow is specified, then EVERY SERVER that connects to
#      the network must also have an allow.
#   2) All allows are from the perspective of services.  So in that case,
#      'uplink' means the server closer to services, and 'server' (or 'leaf')
#      means the server farther away.
#
# [DEF] (none)
#allow = hub.somenet.com *.us.somenet.com

# [OPT] Other configuration files to include as if they were a part of this
# file.  You may use this option multiple times to specify more files.
# [DEF] (none)
include = magick.storage.ini
include = magick.log.ini
include = magick.services.ini

# +------------------+
# | Services Section |
# +------------------+
#
# This section defines specifics about the services clients, specifically.
[services]

# [OPT] The ident used by services users (ie. 'user' in nick!user@host).
# If this is not defined, the nickname of the services client (in lower case)
# will be used.
# [DEF] (none)
user = service

# [OPT] The host used by services users (ie. 'host' in nick!user@host).
# If this is not defined, the server-name from the main section will be
# used.  Although this does have to adhere to the rules of host names,
# it does not have to resolve.
# [DEF] (server-name)
host = somenet.com

# [OPT] The modes all services will set on themselves when they sign on.
# Any mode that a user could set upon themselves can be specified here,
# from +i (invisible) to +o (IRC operator).
# [DEF] (none)
mode = +s

# [OPT] The nicknames (space separated) that the nickname service will sign
# on to the network.  The first nickname specified will be the 'primary'
# nickname, ie. the one that will message users 'out of the blue', all other
# nicknames will by pseudonyms, ie. a user can interact with them just as
# they would the primary nickname, but the nickname will only respond to
# users, not message them out of the blue.
# If you do not specify anything here, nickname services will be disabled.
# [DEF] (none)
nickserv = NickServ

# [OPT] The 'real' name the nickname service will have.  This will only
# show up if a user does a /WHOIS on a nickname service nickname.
# [DEF] Nickname Service
nickserv-name = Nickname Service

# [OPT] The 'real' name the nickname enforcer (the services user that
# 'holds' any nickname during a nickname recovery) will have.  This will
# only show up if a user does a /WHOIS on a held nickname.
# [DEF] Nickname Enforcer
enforcer-name = Nickname Enforcer

# [OPT] The nicknames (space separated) that the channel service will sign
# on to the network.  The first nickname specified will be the 'primary'
# nickname, ie. the one that will message users 'out of the blue', all other
# nicknames will by pseudonyms, ie. a user can interact with them just as
# they would the primary nickname, but the nickname will only respond to
# users, not message them out of the blue.
# If you do not specify anything here, channel services will be disabled.
# [DEF] (none)
chanserv = ChanServ

# [OPT] The 'real' name the channel service will have.  This will only
# show up if a user does a /WHOIS on a channel service nickname.
# [DEF] Channel Service
chanserv-name = Channel Service

# [OPT] The nicknames (space separated) that the memo service will sign
# on to the network.  The first nickname specified will be the 'primary'
# nickname, ie. the one that will message users 'out of the blue', all other
# nicknames will by pseudonyms, ie. a user can interact with them just as
# they would the primary nickname, but the nickname will only respond to
# users, not message them out of the blue.
# If you do not specify anything here, memo services will be disabled.
# [DEF] (none)
memoserv = MemoServ

# [OPT] The 'real' name the memo service will have.  This will only
# show up if a user does a /WHOIS on a memo service nickname.
# [DEF] Channel Service
memoserv-name = Memo Service

# [OPT] The nicknames (space separated) that the operator service will sign
# on to the network.  The first nickname specified will be the 'primary'
# nickname, ie. the one that will message users 'out of the blue', all other
# nicknames will by pseudonyms, ie. a user can interact with them just as
# they would the primary nickname, but the nickname will only respond to
# users, not message them out of the blue.
# If you do not specify anything here, operator services will be disabled.
# [DEF] (none)
operserv = OperServ Magick-1

# [OPT] The 'real' name the operator service will have.  This will only
# show up if a user does a /WHOIS on a operator service nickname.
# [DEF] Channel Service
operserv-name = Operator Service

# [OPT] The nicknames (space separated) that the committee service will sign
# on to the network.  The first nickname specified will be the 'primary'
# nickname, ie. the one that will message users 'out of the blue', all other
# nicknames will by pseudonyms, ie. a user can interact with them just as
# they would the primary nickname, but the nickname will only respond to
# users, not message them out of the blue.
# If you do not specify anything here, committee services will be disabled.
# [DEF] (none)
commserv = CommServ

# [OPT] The 'real' name the committee service will have.  This will only
# show up if a user does a /WHOIS on a committee service nickname.
# [DEF] Channel Service
commserv-name = Committee Service

# [OPT] The nicknames (space separated) that other services will sign
# on to the network.  The first nickname specified will be the 'primary'
# nickname, ie. the one that will message users 'out of the blue', all other
# nicknames will by pseudonyms, ie. a user can interact with them just as
# they would the primary nickname, but the nickname will only respond to
# users, not message them out of the blue.
# If you do not specify anything here, other services will be disabled.
# [DEF] (none)
other = GlobalMSG HelpServ DevNull

# [OPT] The 'real' name other services will have.  This will only
# show up if a user does a /WHOIS on other services nickname.
# [DEF] Channel Service
other-name = Magick <--> User

# [OPT] When a service signs off the network (for example during services
# shutdown), this is the quit message it will use.  This can be overridden
# by the OperServ SHUTDOWN command.  If nothing is specified, no quit reason
# will be given.
quit-message = Goodbye cruel world ...

# +---------------------+
# | File System Section |
# +---------------------+
[filesystem]

# [OPT] The directory where user's pictures will be stored, as numbered files
# without file extensions or any other identifying characteristics.
# [DEF] files/pic
picture-dir = files/pic

# [OPT] The maximum amount of disk space the pictures directory may take up on
# disk.  This is still more of a 'guideline', however once it is exceeded, we
# will stop allowing users to upload their pictures.  Setting this to 0 will
# put no limit on the pictures directory usage (except physical disk space).
# [DEF] 0
picture-size = 0

# [OPT] The directory where attachments to memos will be stored, as numbered
# files without file extensions or any other identifying characteristics.
# [DEF] files/memo
attach-dir = files/memo

# [OPT] The maximum amount of disk space the attachments directory may take up
# on disk.  This is still more of a 'guideline', however once it is exceeded,
# we will stop allowing attachments to memos.  Setting this to 0 will put no
# limit on the attachments directory usage (except physical disk space).
# [DEF] 0
attach-size = 0

# [OPT] The directory where public files will be stored, as numbered files
# without file extensions or any other identifying characteristics.
# [DEF] files/memo
public-dir = files/pub

# [OPT] The maximum amount of disk space the public files directory may take
# up on disk.  This is still more of a 'guideline', however once it is exceeded,
# we will stop allowing public files to be uploaded.  Setting this to 0 will
# put no limit on the public files directory usage (except physical disk space).
# [DEF] 0
public-size = 0

# [OPT] The directory where temporary files will be stored, as numbered files
# without file extensions or any other identifying characteristics.  These
# files are transient, and this directory can safely be emptied on restart.
# [DEF] files/memo
temp-dir = files/temp

# [OPT] The maximum amount of disk space the temporary files directory may take
# up on disk.  This is still more of a 'guideline', however once it is exceeded,
# we will stop allowing all file transfers.  Setting this to 0 will put no limit
# on the public files directory usage (except physical disk space).
# [DEF] 0
temp-size = 0

# [OPT] The size of each block we will use in DCC file transfers.  A DCC file
# transfer works by sending a block of data, then waiting for acknowledgement
# of recipt of that data before sending more data.  Increasing this should
# help speed things up, but could potentially break some clients.
# [DEF] 1 kilobyte
blocksize = 1k

# [OPT] How long to wait for a DCC to be established (or alternatively, the
# period in which we can have no activity) before we will abort the DCC.
# [DEF] 2 minutes
timeout = 2n

# [OPT] Minimum speed a DCC must sustain for us to keep it alive.  If the DCC
# speed drops below this, we will abort it.  Setting this to 0 disables the
# minimum speed check.  This value should be in bytes per second.
# [DEV] 0
min-speed = 0

# [OPT] Maximum speed any single DCC may sustain.  If a DCC is transmitting
# faster than this, it will be automatically capped.  Setting this to 0
# disables DCC speed capping.  This value should be in bytes per second.
# [DEF] 0
max-speed = 0

# [OPT] The maximum throughput all DCCs combined may consume.  If we are over
# this value, we will start capping all DCCs (or lowering existing caps) to
# ensure that we at or around this number.  Setting this to 0 will disable
# global speed limiting.  This value should be in bytes per second.
# [DEF] 0
global-max-speed = 0

# [OPT] How long should our 'current' speed calculations consider relevent.
# In order for us to be able to both report, and limit based on the current
# speed of a DCC file transfer, we must average out how much data was
# transferred in a specific period of time, which should be a relatively short
# period of time.
# [DEF] 30 seconds
sample-time = 30s

# [OPT] Sometimes we have a large amount of data to be sent to the IRC server.
# (or indeed, anyone else we 'talk' to).  To avoid eating up all the memory on
# the system, we will overflow to a disk-based storage mechanism when we go
# above a certain threshold of pending outbound traffic.  This is the directory
# where these overflow files are stored.
# [DEF] flack
flack-dir = flack

# [OPT] The amount of memory we will allocate (per direct connection) as our
# memory-based output buffer.  If we have more than this amount of traffic at
# any time to go to any single socket, we will overflow to disk.
# [DEF] 64 kilobytes
flack-memory = 65536

# [OPT] The size each 'flack' file (that represents data that is pending on a
# single socket) can be before a new flack file for that socket is created.
# We will automatically remove a file once all data contained in it has been
# sent through the socket, or all files once the socket closes.
# [DEF] 1 megabyte
flack-file-max = 1048576

# +-----------------+
# | General Section |
# +-----------------+
#
# This sections is where stuff that fits into no other category goes.  It
# things such as how often events will fire, etc.
[general]

# [OPT] How long to wait after our uplink is disconnected before attempting
# to connect to a new uplink (which may well be the same one).
# [DEF] 5 seconds
server-relink = 5s

# [OPT] How long after a server has split off the network do we remember
# information about its users and such.  'SQUIT protection' is designed to
# help ride out small splits or re-routes, so users who existed before the
# split don't have to re-identify, and we don't sent a massive flurry of
# channel modes.  Once this time expires, if the server has not linked back
# again we forget about all users on the other side of the split.
# [DEF] 2 minutes
squit-protect = 2n

# [OPT] Magick can try to get an early-warning signal of an impending SQUIT
# from user's signoff messages.  This defines how long to remember a user
# that has triggered such an 'early warning' system without a SQUIT coming.
# This stops users faking us out by crafting their signoff message.
# [DEF] 10 seconds
squit-cancel = 10s

# [OPT] How often should we send PING messages to the network to determine
# the current amount of network-wide lag.  Although technically we only need
# to send out a ping when we have had no data from the server recently, we
# will actually send out pings whether we need them or not for lag monitoring.
# [DEF] 30 seconds
ping-frequency = 30s

# [OPT] How many non-wildcard characters must exist in a mask for it to be
# accepted in a channel akick, an akill or services permanent ignore.  If
# this is set to 4, then *!*@*.com would fail, but *!*@*.com.au would not.
# [DEF] 4
starthresh = 4

# [OPT] Default maximum size of any list (users, channels, etc).
# [DEF] 50
list-size = 50

# [OPT] Maximum size a user may request to see of any list.  This does not
# affect IRC operators, who can specify any maximum size (its their dime!).
# [DEF] 250
max-list-size = 250

# [OPT] Minimum number of 'worker' threads we may have.  Worker threads are the
# backbone of Magick.  The worker threads handle all messages from the IRC
# server, from server-based messages (informaiton about joins, parts, etc) to
# all commands to services.  This should be more than one so that one time-
# consuming task does not make services become unresponsive.
# [DEF] 2
min-threads = 3

# [OPT] You can have too much of a good thing, too many threads means that we
# start into the world of lock contention and other such things.  This is the
# maximum amount of worker threads we are allowed to have, regadless of the
# amount of messages waiting to be processed.
# [DEF] 10
max-threads = 25

# [OPT] This is used to determine when we have more threads than are necessary
# for the current workload.  Ideally, we want to have as few threads running as
# we can get away with without affecting services responsiveness.  To this end
# the amount of worker threads at any given time is dynamic, controlled by the
# amount of messages awaiting processing.  The low water mark determines when
# a thread should be terminated using the condition:
#   if (pending_messages < ((threads - 2) * high-water-mark) + low-water-mark)
#     terminate_thread();
# This calculation means that a thread will stay around a little longer than
# is strictly necessary to ensure we are not always spawning/killing threads
# when close to a 'boarder' situation.
# [DEF] 50
low-water-mark = 50

# [OPT] As with the low water mark, the high water mark is used to increase
# the number of worker threads as the load on services goes up.  The condition
# for this is:
#   if (pending_message >= threads * high-water-mark)
#     create_thread();
# [DEF] 75
high-water-mark = 75

# [OPT] How long will we wait for a messages dependancies to be satisfied before
# we allow the message to be processed regardless.  Ideally, this should not be
# necessary, however IRC servers arent perfect.
# [DEF] 30 seconds
message-expire = 30s

# [OPT] How often should we check to see if any expiring entity (nicknames,
# channels, akicks, akills, etc) has expired.  This does not affect internal
# system timers (for example the services ignore), but more entries that have
# a specific creation time and pre-set expiration time.
# [DEF] 5 minutes
expire-check = 5n

# [OPT] How often should our the watchdog thread check for a deadlock.  In any
# multi-threaded program, deadlocks are always possible and undesirable.  One
# way to help 'recover' from them is to implement a watchdog.  The watchdog's
# job is to periodically ensure everything is OK and raise the alarm if it is
# not.  Magick's watchdog does this by requiring all other threads (workers,
# events, you name it) to check in periodically to verify they're still alive.
# [DEF] 5 minutes
watchdog-check = 5n

# [OPT] If a thread has not checked in within the last dead time, then the
# watchdog will consider that thread dead (usually meaning there is some kind
# of deadlock, or could even be the thread has unexpectedly dissapeared).  In
# this case the watchdog will take action.  This could be anything as simple as
# creating a new thread to perform the old one's task, to shutting down Magick
# entirely rather than allowing it to continue in a degraded state.
# [DEF] 30 seconds
watchdog-dead = 30s

# END FILE
