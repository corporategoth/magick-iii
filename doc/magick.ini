# Magick IRC Services
#
# (c) 2005 The Neuromancy Society <info@neuromancy.net>
#
# The above copywright may not be removed under any circumstances,
# however it may be added to if any modifications are made to this
# file.  All modified code must be clearly documented and labelled.
#
# This code is released under the GNU General Public License v2.0 or better.
# The full text of this license should be contained in a file called
# COPYING distributed with this code.  If this file does not exist,
# it may be viewed here: http://www.neuromancy.net/license/gpl.html
#
# =======================================================================
# $Id$
# =======================================================================
#
# For official changes (by The Neuromancy Society), please
# check the ChangeLog* files that come with this distribution.
#
# Third Party Changes (please include e-mail address):
#
# N/A
#
# =======================================================================

# Main configuration file.
#
# Please be aware of the following syntactical rules in this file.
#
# This file is divided into sections.  A key/value pair in one section has
# no baring on the same key/value pair in another section.  Subsections
# are delimited by the '.' character.  For the most part, subsections are
# not needed if the 'parent' section is not needed.  Unlike a traditional
# INI file, some keys in this file are permitted to appear multiple times
# in the same section.
#
# Each comment before a field in this file is prefixed by a code indicatng
# whether the field is required or not.  A code of '[REQ]' indicates that
# the field is required if the section it is in is required.  A code of
# '[OPT]' indicates the field may be omitted if you just wish the default
# to be taken.  Any optional value will also include a '[DEF]' code that
# will indicate the default value if the field is omitted.
#
# When specifying a value that is to be interpereted as a duration, you
# may either spell out the full words (minutes, seconds, etc) or you may
# use the following abbreviations to represent the equivalent units:
#   y = years    m = months     w = weeks      d = day
#   h = hours    n = minutes    s = seconds
# The seconds value may also be specified as a fractional number.  Also,
# you may specify a higher value than the 'natural' boundary of any unit,
# for example its perfectly valid to say 120 seconds to mean 2 minutes.
# A unit of seconds is assumed if no time unit is specified.
#
# Similarly, when specifying values indicating a size (such as kilobytes),
# you may use the following abbreviations to represent the equivalent units:
#   e = exabytes     p = petabytes    t = terabytes    g = gigabytes
#   m = megabytes    k = kilobytes    b = bytes
# As with duration values, going above the 'natural' buondaries of any unit
# is allowed (ie. 2048 bytes to mean 2 kb).  Additionally, you may suffix any
# unit abbreviation (except bytes) with 'b' without altering its meaning, so
# 5kb is equivalent to just 5k.  A unit of bytes is assumed if no size unit is
# specified.
# 
# Use of the '#' character will make any line a comment from that point on,
# and as such the '#' character may not be used in any field.  To represent
# a channel, the '&' channel may be used to replace the '#' character.  We
# only support channels prefixed with a '&' (representing a '#') or a '+'.
#
# Any field requiring a path (either a directory OR file) may have that path
# specified in either absolute or relative terms.  If a relative path is 
# given, it will be relative to the working working directory of Magick,
# unless otherwise specified.  The working directory of Magick will always
# be the current directory where Magick was started from unless the --dir
# (-D) command line option is used.

# +--------------+
# | Main Section |
# +--------------+
#
# Also known as the 'null' section, since there is no explicit section
# name.  Many fields in this section also have command-line parameters.

# [OPT] Directory that is the root of our language files structure.
# [DEF] lang
language-dir = lang

# [OPT] The default language to use for all log file entries, and messages
# that are not sent directly to a single user.
# [DEF] en_GB
language = en_GB

# [OPT] Logging mechanism to use.  More than one may be specified.
# Available mechanisms are:
#   - simple
#     Output is sent to a file.  No cycling or compression occurs.
#   - file
#     Output is sent to a file.  Log file cycling and compression are
#     taken care of for you.
#   - syslog (unix only)
#     Output is sent to the system logger.
#   - eventlog (windows only)
#     Output is sent to the NT Event Log.
#   - net
#     A socket connection is established, and all output is sent to it.
# [DEF] (none)
log = simple

# [OPT] The level at which logging will occur.  Each more verbose log level
# will automatically log messages reported on less verbose levels.
# Available log levels are:
#   - Fatal
#   - Critical
#   - Error
#   - Warning
#   - Notice
#   - Info
#   - Debug
#   - Debug+1 ... Debug+5
# [DEF] Info
log-level = debug+5

# [OPT] Channel to send all log messages to.  This will still work even if
# you do not specify any other method of logging output.
#
# Please read the note at the beginning of this file regarding options that
# require a channel name to be specified.
# [DEF] (none)
log-channel = &snoop

# [REQ] The server name we will advertise ourselves as when connecting to
# the network.
server-name = services.neuromancy.net

# [OPT] The description of our 'server'.  This is only really displayed to
# the user when they execute a /WHOIS on one of the services.
# [DEF] Magick IRC Services
server-desc = Magick IRC Services

# [OPT] The IP address Magick will bind to for all socket connections.  This
# includes both connections to the IRC server, and any other connections that
# may be made (eg. DCCs).
# If you do not know what this is, then please do not specify it, and the
# appropriate interface will be chosen automatically based on the remote IP
# address of the connection.
# [DEF] (none)
bind = 127.0.0.1

# [REQ] The configuration file that contains the details of how the IRC daemon
# in use on your network behaves.
protocol = ircd/ircd.bahamut.ini

# [OPT] The file that will contain the process ID of Magick once it is running.
# [DEF] magick.pid
pidfile = magick.pid

# [OPT] The 'Message of the Day' file.  This file will be sent, verbatim, when
# someone executes a /MOTD command against the services server.
# [DEF] magick.motd
motdfile = magick.motd

# [REQ] The backend mechanism to use for storing all persistent data.  Your
# choice hear will determine which subsection of the storage section will be
# relevent.  The backends you may choose will depend on how Mantra was
# compiled (which in turn is based on what was on your system at the time of
# compilation).  The possible options are:
#   - inifile (guarenteed to exist)
#   - berkeleydb
#   - xml
#   - mysql
#   - postgresql
#   - sqlite
#storage = inifile
storage = postgresql

# [OPT] The lowest level these services can be.  The services level is used
# to determine which set of services (assuming there is more than one set of
# Magick services on the network) are the current 'primary' services.  The
# actual services level of any set of services at any point in time is based
# on how much lag services detect to the rest of the network.  The services
# with the lowest 'actual' level will be the primary services at that point
# in time.
# [DEF] 1
level = 1

# [OPT] The maximum level these services will allow themselves to become.
# [DEF] 5
max-level = 5

# [OPT] The average lag to all servers (excluding the lowest and highest) that
# we will allow before increasing our 'actual' services level.  For example if
# the below is 15 seconds, when the average lag to all servers goes above 15s,
# after the highest and lowest times have been excluded, we will increase our
# actual level.  When it goes above 30s will will increase it again, 45 seconds
# and we will increase it a third time, and so on.  When the lag falls below
# the same threshold points, we will decrease our actual level accordingly.
# [DEF] 15 seconds
lag-time = 15s

# [OPT] How often to commit our databases to permanent storage.  Depending on
# which storage backend is in use, this value may actually do nothing, however
# if you have a storage backend that stores all data in memory and periodically
# commits that data to permanent storage, this is how often this will occur.
# [DEF] 5 minutes
save-time = 5n

# [REQ] This option stops Magick from running, pure and simple.  It is here to
# ensure that you at least look at the configuration file and alter it before
# just starting up Magick.  This must be set to 'false' for Magick to start.
stop = false

# [REQ] The servers Magick will attempt to connect to.  You may specify as
# many remote connection entries as you like, with the syntax of:
#   remote = <host> <port> <password> [numeric]
# Where <ip address> is the remote host (which MUST resolve) or ip address of
# the IRC server to connect to (which must be configured to allow us to
# connect to it as a server). <port> is a port that the IRC server is listening
# on.  <password> is the password that will be used in BOTH directions for
# the connection.  And [numeric] is an optional field that contains what OUR
# (ie. services) numeric will be when connected to this server.
#
# Server connections will be attempted in the order they are provided.
remote = 127.0.0.1 6667 MaGeeK

# [OPT] This option is used to both stop rogue admins linking in servers
# without getting permission first, and for enforcing certain rules as
# far as how servers may be linked together.  The syntax is:
#   allow = <server> [uplinks]
# Where <server> is the server (exactly as it appears in a server listing)
# that is allowed to connect to the network, and [uplinks] is a wildcarded
# mask describing who that server may connect to.  for example:
#   allow = leaf1.us.somenet.com *.us.somenet.com
# may be used to say that leaf1 may only connect to another server that ends
# in .us.somenet.com.  You may specify as many allow lines as you like, and
# even specify multiple allow lines for the same server.  If no [uplinks] are
# specified, then it is the same as putting in '*' (ie. the server may connect
# to any other server).
#
# This is an advanced feature and should not be used unless you really know
# what you are doing.  Please keep two things in mind when using allows:
#   1) If even one allow is specified, then EVERY SERVER that connects to
#      the network must also have an allow.
#   2) All allows are from the perspective of services.  So in that case,
#      'uplink' means the server closer to services, and 'server' (or 'leaf')
#      means the server farther away.
#
# [DEF] (none)
#allow = hub.somenet.com *.us.somenet.com

# +-----------------+
# | Storage Section |
# +-----------------+
#
# These options pretain to all storage types, regardless of which backend is
# in use.  As such, this section must always exist.
[storage]

# [OPT] The hash to use to use to 'encrypt' all passwords.  Some hashing
# mechanisms may not be available if they were not available to Mantra when
# it was compiled.  The possible options are:
#   - NONE (passwords are stored clear-text!)
#   - MD5
#   - MD4
#   - MD2
#   - MDC2
#   - SHA0
#   - SHA1
#   - RIPEMD
# [DEF] NONE
password-hash = SHA1

# [OPT] This determines whethere we should try to retrieve an entry (such as a
# registered nickname, channel, etc) from our backend storage if we don't find
# it in memory.  In most cases, this should be false, since on startup we will
# learn about each record that is valid, and keep track when new ones are added
# or removed.  However this MIGHT be useful if there is the possibility that
# an external application may modify our backend storage directly and add or
# remove an entry directly.  Please note, if the external application only
# modifies existing records, this should still be set to false.
# [DEF] false
deep-lookup = false

# [OPT] Do we wish to load all re-load all entries after saving them.  This,
# again is a rare situation, and used for similar reasons as deep-lookup.
# This option would be used if again, an external application is modifying
# the backend data storage, but it does not matter so much that the new
# entry exist immediately (ie. it can exist up to <save-time> later).  This
# method is more efficient but less accurate than deep lookups, but as with
# deep lookups, it should not be used unless absolutely necessary.
# [DEF] false
load-after-save = false

# [OPT] When we load a field from our storage backend, Magick will cache that
# value so that if it is requested again within the cache period, we will not
# have to do a secondary lookup.  This option determines how old the cached
# data may be before we look it up directly from the storage backend again.
# When a field is set from within magick, the cache period is reset.
#
# If you have a storage backend mechanism that keeps all data in memory, and
# only writes it to disk, this can be disabled to save memory (though if you
# have enough memory, keeping this enabled does speed things up slightly).
# Otherwise, if you are certain nothing outside of Magick will modify the data
# directly, then you can set this to a relatively long time to alleviate load
# on the storage backend.
# [DEF] 5 minutes
cache-expire = 5n


# +--------------------------+
# | INI File Storage Section |
# +--------------------------+
#
# These options are only required when the storage option in the main section
# is set to 'inifile'.  The INI file mechanism stores all data in INI file format.
# This storage mechanism is guarenteed to exist, and is the simplest (though not
# the most efficient) storage mechanism.
#
# The INI file storage mechanism stores all data in memory and periodically saves
# the data to disk, as such the only way for an external modification of the data
# file to become 'live' is via. a manual RELOAD command, which will lose any
# changes that had happened since the last save.
#
# This should be used as a storage mechanism of last resort if you have any others
# available, as INI files do not have strong typing or any kind of data dictionary
# to ensure the data is correct, and is very rigid in its layout requirements.
[storage.inifile]

# [REQ] Stages are layers that the formatted data will go through to be saved.
# There are two kinds of stages, 'intermediary' stages and 'final' stages.  Only
# the final stage is required, and you may only have one final stage, though you
# may have as many intermediary stages as you like.
#
# The final stage more or less determines the final destination of the data, and
# may be one of:
#   - file (the data is stored on disk)
#   - net (the data is sent/read from a socket)
# Intermediary stages can do anything from modifying the data that 'goes through'
# it to simply verifying the data is correct that is going through it.  The
# intermediary stages are:
#   - verify (check to ensure the data is correct)
#   - compress
#   - crypt (encrypt/decrypt the data)
#
# Stages are specified in the order they would be used when SAVING the data,
# for example verify THEN compress THEN encrypt THEN file.
#stage = verify
#stage = compress
#stage = crypt
stage = file

# [OPT] Should Magick care about extra fields in the storage backend.  This is
# used if you have extra data in your data schema for other purposes (eg. an
# external application).  If this is set to false, then Magick will complain if
# it detects data it does not know how to handle.
# [DEF] false
tollerant = false

# +--------------------------------+
# | Verify Stage Section (inifile) |
# +--------------------------------+
#
# These options control the Verify stage as used by the INI file storage backend.
# This section should be commented out (or removed) if you do not use the INI
# file storage backend or the verify stage with the INI file storage backend.
#[storage.inifile.stage.verify]

# [OPT] The offset in the stream where we would expect to find the verification
# string.
# [DEF] 0
#offset = 0

# [REQ] The string we will look for to ensure that our data is correctly formatted.
#string = 

# [OPT] Whether we will ignore a failure to verify our data integrity, or cause us
# to abort saving or loading of the data.
# [DEF] false
#nice = false

# +----------------------------------+
# | Compress Stage Section (inifile) |
# +----------------------------------+
#
# These options control the Compress stage as used by the INI file storage
# backend.  This section should be commented out (or removed) if you do not use
# the INI file storage backend or the compress stage with the INI file storage
# backend.
#[storage.inifile.stage.compress]

# [REQ] The compression algorithm to use to compress the data.  Different
# algorithms have different speed/size efficiencies.  Only mechanisms that
# existed when Mantra was compiled will be available.  The options are:
#   - LZW (always available)
#   - ZLIB (aka. gzip)
#   - BZIP2
#style = BZIP2

# [OPT] How hard we should try and compress the data through this stream.  This
# directly affects our CPU usage during data saves.  Often at some point the
# compression gained by a higher compression level is not worth the extra CPU
# cycles expended to bring that gain.  Valid values are between 0 (none) and
# 9 (maximum).  This has no baring on decompression (ie. data load).
# [DEF] 6
#level = 6

#[storage.inifile.stage.crypt]
#type = AES
#bits = 256
#hash = RIPEMD
#key = blah
#keyfile = magick.key

[storage.inifile.stage.file]
name = magick.mnd

[storage.inifile.stage.net]
host = 127.0.0.1
port = 1234

[storage.xml]
#stage = compress
stage = verify
#stage = crypt
stage = file
tollerant = false
encode = UTF-8

[storage.xml.stage.verify]
offset = 0
string = <?xml version="1.0" encoding="UTF-8"?>
nice = false

[storage.xml.stage.compress]
level = 5

[storage.xml.stage.crypt]
type = AES
bits = 256
hash = RIPEMD
keyfile = magick.key

[storage.xml.stage.file]
name = magick.mnd

[storage.xml.stage.net]
host = 127.0.0.1
port = 1234

[storage.postgresql]
db-name = magick
user = prez
#password = blah
#host = 127.0.0.1
#port = 1234
tollerant = false
timeout = 0
ssl-only = false
#max-conn-count = 0

[storage.mysql]
db-name = blah
user = user
password = pass
host = 127.0.0.1
port = 1234
tollerant = false
timeout = 0
compression = false
max-conn-count = 0

[storage.sqlite]
db-name = blah
tollerant = false
max-conn-count = 0

[storage.berkeleydb]
db-dir = .
tollerant = false
private = true
password = abc
btree = false


[log.file]
name = magick.log
backup = 7
max-size = 500000000
archive-cmd = gzip -9
archive-ext = gz

utc = false
format = <DATE:yyyy-mm-dd hh:nn:ss.uuu> <LEVEL:-10s> <MESSAGE>
hex-decimal = false
hex-width = 16

[log.file.levels]
fatal = FATAL
critical = CRITICAL
error = ERROR
warning = WARNING
notice = NOTICE
info = INFO
debug = DEBUG

[log.syslog]
facility = Local0

[log.simple]
name = magick.log

utc = false
format = <DATE:C> <LEVEL:-10s> <MESSAGE>
hex-decimal = false
hex-width = 16

[log.simple.levels]
fatal = FATAL
critical = CRITICAL
error = ERROR
warning = WARNING
notice = NOTICE
info = INFO
debug = DEBUG

[log.net]
host = 127.0.0.1
port = 1234

utc = false
format = <DATE:C> <LEVEL:-10s> <MESSAGE>
hex-decimal = false
hex-width = 16

[log.net.levels]
fatal = FATAL
critical = CRITICAL
error = ERROR
warning = WARNING
notice = NOTICE
info = INFO
debug = DEBUG

[services]
user = service
host = somenet.com
mode = +s

nickserv = NickServ
nickserv-name = Nickname Service

enforcer-name = Nickname Enforcer

chanserv = ChanServ
chanserv-name = Channel Service

memoserv = MemoServ
memoserv-name = Memo Service

operserv = OperServ Magick-1
operserv-name = Operator Service

commserv = CommServ
commserv-name = Committee Service

other = GlobalMSG HelpServ DevNull
other-name = Magick <--> User

quit-message = Goodbye cruel world ...

[filesystem]
picture-dir = files/pic
picture-size = 0
attach-dir = files/memo
attach-size = 0
public-dir = files/pub
public-size = 0
temp-dir = files/temp
temp-size = 0

blocksize = 1k
timeout = 2n
min-speed = 0
max-speed = 0
sample-time = 30s

[general]
server-relink = 5s
squit-protect = 2n
squit-cancel = 10s
ping-frequency = 30s

starthresh = 4
list-size = 50
max-list-size = 250

min-threads = 3
max-threads = 25
low-water-mark = 50
high-water-mark = 75
message-expire = 30s
watchdog-check = 5n
watchdog-dead = 30s


[nickserv]
append = false
prefix = Guest
suffixes = _-^`
expire = 4w
delay = 30s
ident = 2n
release = 1n
password-fail = 5
picture-maxsize = 0
picture-extensions = jpg png gif bmp tif

[nickserv.defaults]
protect = true
secure = false
noexpire = false
nomemo = false
private = false
privmsg = false
language = en_GB

[nickserv.lock]
protect = false
secure = false
noexpire = false
nomemo = false
private = false
privmsg = false
language = false

[chanserv]
hide = false
expire = 2w
delay = 30s
max-per-nick = 15
#ovr-per-nick =
max-messages = 15
#ovr-messages =
default-akick-reason = You have been banned from channel
password-fail = 5
channel-keep = 15s
min-level = -1
max-level = 30

[chanserv.defaults]
mlock = +nt
bantime = 0
parttime = 3n
keeptopic = true
topiclock = false
private = false
secureops = false
secure = false
noexpire = false
anarchy = false
kickonban = false
restricted = false
cjoin = false
revenge = NONE

[chanserv.lock]
mlock = false
bantime = false
parttime = false
keeptopic = false
topiclock = false
private = false
secureops = false
secure = false
noexpire = false
anarchy = false
kickonban = false
restricted = false
cjoin = false
revenge = false

[chanserv.levels]
autodeop = -1
autovoice = 5
autohalfop = 10
autoop = 10
readmemo = 0
writememo = 15
delmemo = 25
greet = 1
overgreet = 25
message = 20
autokick = 20
super = 25
unban = 10
access = 5
set = 25
view = 1
cmd-invite = 5
cmd-unban = 10
cmd-voice = 5
cmd-halfop = 10
cmd-op = 10
cmd-kick = 15
cmd-mode = 15
cmd-clear = 20

[memoserv]
news-expire = 3w
inflight = 2n
delay = 10s
files = 0
max-file-size = 0

[operserv]
services-admin = PreZ
services-admin = Lilith
secure = false
secure-oper = false

htm-gap = 5s
htm-threshold = 16k
max-htm-gap = 1n
manual-gap = 30s

[operserv.akill]
reject = 10.00
expire = 3h
expire-oper = 1d
expire-admin = 1w
expire-sop = 8w
expire-sadmin = 1y

[operserv.clone]
limit = 2
max-limit = 50
kill-reason = Maximum connections from one host exceeded
expire = 3h
akill-trigger = 10
akill-reason = Clone trigger exceeded, Automatic AKILL
akill-time = 30n

[operserv.ignore]
flood-time = 10s
flood-messages = 5
expire = 20s
limit = 5
remove = 5n
method = nick!user@port.host

[commserv]
max-logon = 5
#ovr-logon =

[commserv.defaults]
secure = false
private = false
openmemos = true

[commserv.lock]
secure = false
private = false
openmemos = false

[commserv.all]
name = ALL
#set-mode =

[commserv.regd]
name = REGD
set-mode = r

[commserv.sadmin]
name = SADMIN
mode-o = true
#set-mode = 

[commserv.sop]
name = SOP
mode-o = true
set-mode = a

[commserv.admin]
name = ADMIN
mode-o = true
set-mode = A

[commserv.oper]
name = OPER
mode-o = true
#set-mode = 

[commserv.overrides]
view = OPER
owner = SADMIN

mode = SOP
op = SOP
halfop = ADMIN
voice = OPER
invite = SOP
kick = SOP
unban = SOP
clear = SADMIN
